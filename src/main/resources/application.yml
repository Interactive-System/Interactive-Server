spring:
  application:
    name: hana-server
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql_container:3306/insurance?serverTimezone=Asia/Seoul
    username: admin
    password: admin
    hikari:
      maximum-pool-size: 40 # 최대 풀 크기
      minimum-idle: 20       # 최소 유휴 커넥션 수
      idle-timeout: 30000    # 유휴 커넥션 타임아웃 (밀리초)
      connection-timeout: 30000 # 커넥션 타임아웃 (밀리초)
      max-lifetime: 1800000   # 커넥션 최대 수명 (밀리초)

  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        use_sql_comments: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: rlawjddn9704301@gmail.com
    password: emmw xrly mgyf revs
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true

  server:
    port: ${SERVER_PORT:8080} # 환경 변수로 포트 설정, 기본값 8080

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, info
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    root: INFO
    org.springframework: DEBUG


#spring:
#  application:
#    name: hana-server
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://interactive-hana.shop:3306/insurance?serverTimezone=Asia/Seoul
#    username: admin
#    password: admin
#    hikari:
#    maximum-pool-size: 40 # 최대 풀 크기
#    minimum-idle: 20       # 최소 유휴 커넥션 수
#    idle-timeout: 30000   # 유휴 커넥션 타임아웃 (밀리초)
#    connection-timeout: 30000 # 커넥션 타임아웃 (밀리초)
#    max-lifetime: 1800000 # 커넥션 최대 수명 (밀리초)
#
#  jpa:
#    database: mysql
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        show_sql: false
#        format_sql: true
#        use_sql_comments: true
#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: rlawjddn9704301@gmail.com
#    password: emmw xrly mgyf revs
#    properties:
#      mail:
#        smtp:
#          starttls:
#            enable: true
#            required: true
#          auth: true
#  server:
#    port: ${SERVER_PORT:8080} # 환경 변수로 포트 설정, 기본값 8080
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: prometheus, health, info
#  metrics:
#    tags:
#      application: ${spring.application.name}
#
#logging:
#  level:
#    root: INFO
#    org.springframework: WARN
#
#server:
#  forward-headers-strategy: framework