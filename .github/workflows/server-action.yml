name: hana-server workflow
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Notify Slack - Deployment Started
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"인터렉티브 하나 서버 배포가 시작되었습니다."}' https://hooks.slack.com/services/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

      - name: Gradle Build
        run: ./gradlew bootJar

      - name: Verify Build Output
        run: ls -la build/libs

      - name: Docker Image Build
        env:
          DOCKER_BUILDKIT: 1
        run: docker build --tag rlawjddn5980/hana-server:latest .

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Hub Push
        run: docker push rlawjddn5980/hana-server:latest

      - name: Connect to WAS & Execute Application
        id: deploy_step  # Step ID 추가
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.WAS_HOST }}
          username: ${{ secrets.WAS_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # 현재 활성화된 컨테이너 확인
            if [ "$(sudo docker ps -q -f name=hana-server-blue)" ]; then
              NEW_CONTAINER_NAME="hana-server-green"
              OLD_CONTAINER_NAME="hana-server-blue"
              PORT_MAPPING="8081:8080"  # 블루가 활성화된 경우 8081 사용
              TARGET_PORT="8081"
            else
              NEW_CONTAINER_NAME="hana-server-blue"
              OLD_CONTAINER_NAME="hana-server-green"
              PORT_MAPPING="8080:8080"  # 그린이 활성화된 경우 8080 사용
              TARGET_PORT="8080"
            fi

            # 새로운 컨테이너 실행
            sudo docker run -d -p $PORT_MAPPING --name $NEW_CONTAINER_NAME --network hana_network -v /home/ubuntu/logs:/logs rlawjddn5980/hana-server:latest

            # Nginx 설정 업데이트
            sudo docker exec nginx sh -c "sed -i 's/set \$target_server .*/set \$target_server \"$NEW_CONTAINER_NAME\";/' /etc/nginx/nginx.conf && sed -i 's/set \$target_port .*/set \$target_port \"$TARGET_PORT\";/' /etc/nginx/nginx.conf"

            # Nginx 재시작
            sudo docker exec nginx nginx -s reload

            # 이전 컨테이너 중지 및 제거
            if [ "$(sudo docker ps -q -f name=$OLD_CONTAINER_NAME)" ]; then
              sudo docker stop $OLD_CONTAINER_NAME || true
              sudo docker rm $OLD_CONTAINER_NAME || true
            fi

      - name: Notify Slack - Deployment Finished
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"인터렉티브 하나 서버 배포가 완료되었습니다."}' https://hooks.slack.com/services/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

      - name: Notify Slack - Deployment Failed
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"인터렉티브 하나 서버 배포에 실패했습니다."}' https://hooks.slack.com/services/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
